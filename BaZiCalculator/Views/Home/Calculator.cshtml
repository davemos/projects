@model BaZiCalculator.ViewModels.HomeViewModel

@{
    ViewBag.Title = "Ba Zi Calculator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Index", "Home"))
{
    <table>
        <tr>
            <th scope="row">Calculator</th>
        </tr>
        <tr><td><button type="submit">New Calculation</button></td><td><button type="button" onclick="print()">Print</button></td></tr>

    </table>
}
    <br />
    <table class="table table-bordered">

        <tr>
            <th>Birth Time</th>
            <th>Birth Day</th>
            <th>Birth Month</th>
            <th>Birth Year</th>
        </tr>
        <tr>
            <td>@Model.BirthTime</td>
            <td>@Model.BirthDay</td>
            <td>@Model.BirthMonth</td>
            <td>@Model.BirthYear</td>
        </tr>
    </table>
    <table>
        <tr>
            <th scope="row" colspan="5">@Model.StatementOfExcessDeficient</th>
        </tr>
        <tr>
            <th scope="row" colspan="5">The Day Master is @Model.FourPillarsResult.DayMasterLabel</th>
        </tr>
    </table>
    <br />

    <table>
        <tr><th scope="row" colspan="5">5 Element Profile</th></tr>
        <tr>
            <td width="400" height="400">
                <canvas id="myChart" width="400" height="400"></canvas>
            </td>
            <td></td>
            <td></td>
        </tr>
    </table>

    <br />
    <table class="table table-bordered">
        <tr>
            <th scope="row" colspan="2">Constitutional Meridian Analysis</th>
            <th scope="row" colspan="1">Occurrence</th>
            <th scope="row" colspan="1">Value</th>
        </tr>
        @foreach (var yy in Model.YinYangMeridianResult)
        {
            
            <tr>
            <th scope="row">@yy.Stem</th>
            <td>@yy.Meridian</td>
            <td>@yy.Count</td>
            <td>@yy.StemCount</td>
            </tr>
        }

    </table>
<table>
    <tr>
        <th scope="row"></th>
        <th width="100" align="right">Total Yin:</th>
        <td width="100" align="left">@Model.TotalYin</td>
        <th width="100" align="right">Total Yang:</th>
        <td width="100" align="left">@Model.TotalYang</td>
        <th width="100" align="right">Value:</th>
        <th width="100" align="right">Total Yin:</th>
        <td width="100" align="left">@Model.TotalYinValue</td>
        <th width="100" align="right">Total Yang:</th>
        <td width="100" align="left">@Model.TotalYangValue</td>
    </tr>
</table>
<br />
<table>
    <tr>
        <td colspan="2"><table class="table table-bordered">
            <tr>
                <th scope="row" colspan="2">Organ/Meridian Value Hierarchy</th>
            </tr>
            @foreach (var yy in Model.YinYangMeridianResult.OrderByDescending(y => y.StemCount))
            {

                if (yy.StemCount >= 160 || yy.StemCount == 0 || @Model.FourPillarsResult.DayStem == yy.Stem)
                {
                    @:<tr style="background-color: yellow">
                }
                else
                {
                    @:<tr>
                }

                <td>@yy.Meridian</td>
                <td>@yy.StemCount</td>
                @:</tr>
            }
        </table></td>
        <td colspan="2" style="border:none"></td>
    </tr>
    

</table>
    <br />
    <table class="table table-bordered">

        <tr><th scope="row" colspan="5">Four Pillars Bazi</div></tr>
        <tr>
            <th></th>
            <th>HOUR</th>
            <th>DAY</th>
            <th>MONTH</th>
            <th>YEAR</th>
        </tr>
        <tr>
            <th scope="row">STEMS</th>
            <td>@Model.FourPillarsResult.HourStem @Model.FourPillarsResult.HourStemValue</td>
            <td>@Model.FourPillarsResult.DayStem @Model.FourPillarsResult.DayStemValue</td>
            <td>@Model.FourPillarsResult.MonthStem @Model.FourPillarsResult.MonthStemValue</td>
            <td>@Model.FourPillarsResult.YearStem @Model.FourPillarsResult.YearStemValue</td>
        </tr>
        <tr>
            <th scope="row">BRANCHES</th>
            <td>@Model.FourPillarsResult.HourBranch</td>
            <td>@Model.FourPillarsResult.DayBranch</td>
            <td>@Model.FourPillarsResult.MonthBranch</td>
            <td>@Model.FourPillarsResult.YearBranch</td>
        </tr>
        <tr>
            <td></td>
            <td>@if (Model.FourPillarsResult.HourHiddenElements.HiddenElement != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.HourHiddenElements.HiddenElement @Model.FourPillarsResult.HourHiddenElements.HiddenElementValue</text>}</td>
            <td>@if (Model.FourPillarsResult.DayHiddenElements.HiddenElement != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.DayHiddenElements.HiddenElement @Model.FourPillarsResult.DayHiddenElements.HiddenElementValue</text>}</td>
            <td>@if (Model.FourPillarsResult.MonthHiddenElements.HiddenElement != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.MonthHiddenElements.HiddenElement @Model.FourPillarsResult.MonthHiddenElements.HiddenElementValue</text>}</td>
            <td>@if (Model.FourPillarsResult.YearHiddenElements.HiddenElement != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.YearHiddenElements.HiddenElement @Model.FourPillarsResult.YearHiddenElements.HiddenElementValue</text>}</td>
        </tr>
        <tr>
            <td></td>
            <td>@if (Model.FourPillarsResult.HourHiddenElements.HiddenElement2 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.HourHiddenElements.HiddenElement2 @Model.FourPillarsResult.HourHiddenElements.HiddenElement2Value</text>}</td>
            <td>@if (Model.FourPillarsResult.DayHiddenElements.HiddenElement2 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.DayHiddenElements.HiddenElement2 @Model.FourPillarsResult.DayHiddenElements.HiddenElement2Value</text>}</td>
            <td>@if (Model.FourPillarsResult.MonthHiddenElements.HiddenElement2 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.MonthHiddenElements.HiddenElement2 @Model.FourPillarsResult.MonthHiddenElements.HiddenElement2Value</text>}</td>
            <td>@if (Model.FourPillarsResult.YearHiddenElements.HiddenElement2 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.YearHiddenElements.HiddenElement2 @Model.FourPillarsResult.YearHiddenElements.HiddenElement2Value</text>}</td>
        </tr>
        <tr>
            <td></td>
            <td>@if (Model.FourPillarsResult.HourHiddenElements.HiddenElement3 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.HourHiddenElements.HiddenElement3 @Model.FourPillarsResult.HourHiddenElements.HiddenElement3Value</text>}</td>
            <td>@if (Model.FourPillarsResult.DayHiddenElements.HiddenElement3 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.DayHiddenElements.HiddenElement3 @Model.FourPillarsResult.DayHiddenElements.HiddenElement3Value</text>}</td>
            <td>@if (Model.FourPillarsResult.MonthHiddenElements.HiddenElement3 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.MonthHiddenElements.HiddenElement3 @Model.FourPillarsResult.MonthHiddenElements.HiddenElement3Value</text>}</td>
            <td>@if (Model.FourPillarsResult.YearHiddenElements.HiddenElement3 != BaZiCalculator.Models.Stems.Empty)
            {<text>@Model.FourPillarsResult.YearHiddenElements.HiddenElement3 @Model.FourPillarsResult.YearHiddenElements.HiddenElement3Value</text>}</td>
        </tr>
    </table>
    <script>
        var ctx = document.getElementById("myChart").getContext('2d');
        var colors = new Array();
        var dataPoints = new Array();
        var legend = new Array();
        dataPoints.push(@Model.ElementTotals.WoodPercent);
        dataPoints.push(@Model.ElementTotals.FirePercent);
        dataPoints.push(@Model.ElementTotals.EarthPercent);
        dataPoints.push(@Model.ElementTotals.MetalPercent);
        dataPoints.push(@Model.ElementTotals.WaterPercent);

        colors.push('green'); legend.push("Wood @Model.ElementTotals.WoodPercent%");
        colors.push('red'); legend.push("Fire @Model.ElementTotals.FirePercent%");
        colors.push('yellow'); legend.push("Earth @Model.ElementTotals.EarthPercent%");
        colors.push('silver');  legend.push("Metal @Model.ElementTotals.MetalPercent%");
        colors.push('blue'); legend.push("Water @Model.ElementTotals.WaterPercent%");

        
var myChart = new Chart(ctx, {
    type: 'doughnut',
    data: {
        labels: ["Wood @Model.ElementTotals.WoodPercent%", "Fire @Model.ElementTotals.FirePercent%", "Earth @Model.ElementTotals.EarthPercent%", "Metal @Model.ElementTotals.MetalPercent%", "Water @Model.ElementTotals.WaterPercent%"],
        datasets: [{
            label: '5 Element Profile',
            data: dataPoints,
            backgroundColor: colors,
            borderColor:  colors,
            borderWidth: 1
        }]
    },
    options: {
        responsive: true,
        rotation:-135,
        legend: {position: 'right'}

    }
});
    </script>

